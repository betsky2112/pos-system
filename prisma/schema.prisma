generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(CASHIER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactions Transaction[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  stock       Int
  image       String?
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transactionItems TransactionItem[]
}

model Category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Transaction {
  id           String   @id @default(uuid())
  date         DateTime @default(now())
  subtotal     Float
  tax          Float
  discount     Float
  total        Float
  paymentStatus PaymentStatus @default(PAID)
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  items TransactionItem[]
}

model TransactionItem {
  id            String      @id @default(uuid())
  quantity      Int
  price         Float
  productId     String
  product       Product     @relation(fields: [productId], references: [id])
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

enum Role {
  ADMIN
  CASHIER
}

enum PaymentStatus {
  PAID
  PENDING
  CANCELLED
}